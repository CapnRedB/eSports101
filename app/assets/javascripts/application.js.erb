// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts	,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require_tree .
var t1Champs = [ 'Gangplank', 'Gragas', 'Syndra', 'Sivir', 'Braum' ];
var version;
var toolsOnDeck = 9;
var t1ChampKeys = [ 41, 79, 134, 15, 201 ];
var t2Champs = [ 'Riven', 'RekSai', 'Leblanc', 'Jhin', 'Trundle' ];
var t2ChampKeys = [ 92, 421, 7, 202, 48 ];
var gameChamps = {
	'Gangplank': 41,
	'Gragas': 79,
	'Syndra': 134,
	'Sivir': 15,
	'Braum': 201,
	'Riven': 92,
	'RekSai': 421,
	'Leblanc': 7,
	'Jhin': 202,
	'Trundle': 48
}
var toolTipTimes = [ 504, 508, 512 ];
//[ 504, 588, 655, 680, 710, 749, 774, 893, 899, 936, 1192, 1258, 1428, 1755, 1849, 1894, 1928, 2183, 2323, 2357, 2446, 2459, 2621, 2808 ];
var toolTips = [ {
	"tool": "snowball",
	"tip": "gaining and extending a lead until the enemy team cannot stop it. Like a snowball rolling down a mountain"
}, {
	"tool": "summoner spell",
	"tip": "pool of spells that all players can use two of that have nothing to do with the character played. <br/> Flash- teleport a small distance away instantly <br/>Exhaust - slow and lower damage of one enemy <br/>Ghost - Move faster and through other units <br/> <strong>Teleport</strong> - After 4 seconds, teleport to any tower, allied minion, or ward <br/>Ignite - Reduce effectiveness of healing and deal damage over time"
}, {
	"tool": "buffs",
	"tip": "Bonuses given to a character for a duration. Are lost upon death. <br/> Blue buff - Allows characters to use their spells more frequently. <br/> Red buff - Allows characters to slow and burn enemies they attack <br/> Baron Buff - Allows all teammates to gain power and apply power to nearby minions"
} ];
// var desc=["gaining and extending a lead until the enemy team cannot stop it. Like a snowball rolling down a mountain","pool of spells that all players can use two of that have nothing to do with the character played. Flash- teleport a small distance away instantly Exhaust - slow and lower damage of one enemy Ghost - Move faster and through other units Teleport - After 4 seconds, teleport to any tower, allied minion, or ward Ignite - Reduce effectiveness of healing and deal damage over time","Bonuses given to a character for a duration. Are lost upon death. Blue buff - Allows characters to use their spells more frequently. Red buff - Allows characters to slow and burn enemies they attack Baron Buff - Allows all teammates to gain power and apply power to nearby minions", "A small trinket that reveals a location on the map for you and your teammates.", "Start of the game, normal positions of 1 in the top side, 1 in the middle, 2 in the bottom and 1 in the jungle.","Score given to players when they deal the finishing blow to a minion. The higher the score, the more gold and more power they have. Perfect cs at 20 minutes is about 200","Dealing the finishing blow","The teleport summoner spell","leaving normal position to go and help a teammate their normal position.","Strongest ability the character has.","Objective that gives extra power to one character for a massive duration when slain.","A pack of minions","In match currency used to buy items that give more strength to characters. Usually the team with more ends up winning. Gold is gained over time and when destroying anything of the enemyâ€™s on the map.","Objective that give a permanent power boost to the team that slays it.","Objects that grant power and gold to the entire team instead of just one player. For example: Towers, Drakes, Inhibitors and Baron","Cooldown Reduction: Allows for players to use their abilities more frequently.","One of the most powerful objectives in the game, teams who take this have a massive advantage for the next five minutes.","Known as 'GA' Revives a champion after he or she dies","When a jungler goes to a lane and attacks the enemy champion with the ally already there","Area of Effect: Abilities that target an area instead of one target","An objective that gives the team that destroys it a massive advantage, usually the first team to take one, ends up winning the game.","1/3/1 - 1 in the top lane, 3 in the middle lane, 1 in the bottom lane. A formation teams usually take to push their advantage.", "A massive amount of damage in a short time","Crowd Control: impairing the movement of enemy characters","Bigger and stronger minions that spawn when an inhibitor is destroyed","Ignoring all objectives and enemy players in order to try and end the game by taking the enemy base (Nexus)."]
var toolTip = false;
var tag = document.createElement( 'script' );
tag.id = 'iframe-demo';
tag.src = 'https://www.youtube.com/iframe_api';
var firstScriptTag = document.getElementsByTagName( 'script' )[ 0 ];
firstScriptTag.parentNode.insertBefore( tag, firstScriptTag );
var player;

function onYouTubeIframeAPIReady() {
	player = new YT.Player( 'video', {
		events: {
			'onReady': onPlayerReady,
			'onStateChange': onPlayerStateChange
		}
	} );
}

function onPlayerReady( event ) {
	console.log( player.getCurrentTime() );

}


var myTimer;
var time;

function checkToolTipTime( time ) {
	if ( toolTipTimes.includes( time ) ) {
		toolsOnDeck--;
		var toolIndex = toolTipTimes.indexOf( time );
		var tip = $( '<div>' ).css( 'background-color', '#08415C' );
		var text = $( '<p>' ).addClass( 'valign' );
		tip.addClass( 'row-centered' );
		tip.append( text );
		tip.css( 'color', 'white' );
		tip.css( 'border', 'black solid 1px' );
		tip.css( 'height', '90px' );
		tip.click( function( index ) {
			console.log( toolIndex );
			console.log( toolTips );
			$( '#toolTipText' ).css( 'color', 'white' );
			$( '#toolTipText' ).html( toolTips[ toolIndex ].tip );

		} )
		$( '.learn' ).prepend( tip )
		text.html( toolTips[ toolIndex ].tool );
		var numTips = $( '.learn' ).children().length
		if ( numTips > 8 ) {
			$( '.learn' ).children().last().remove();
		}

	}
}

function onPlayerStateChange( event ) {
	if ( event.data === 1 ) {
		myTimer = setInterval( function() {
			time = player.getCurrentTime();
			checkToolTipTime( Math.floor( parseInt( time ) ) );
		}, 1000 )
	} else {
		clearInterval( myTimer ); //Stop checking the time if the video isn't playing
	}
}

$( document ).ready( function( e ) {
	console.log($('.gameNode1').length);
	//Get tooltipTimes Hopefully will be deprecated soon.
	$( document ).on( 'keyup', function( e ) {
		if ( String.fromCharCode( e.keyCode ) === 'T' ) {
			toolTipTimes.push( time );
		} else if ( String.fromCharCode( e.keyCode ) === ' ' ) {
			console.log( toolTipTimes );
		}
	} )
	$.ajax( {
		url: 'https://global.api.pvp.net/api/lol/static-data/na/v1.2/versions?api_key=RGAPI-1f0b8fd1-baaf-4fcf-acf1-0ec64909781a'  ,
		success: function( result ) {
			version = result[ 0 ];
			console.log( version );
		}
	} ).done( function() {
		$( '#t1Top' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t1Champs[ 0 ] + '.png ) 0 0/100% 100% no-repeat' );
		$( '#t1Jung' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t1Champs[ 1 ] + '.png ) 0 0/100% 100%' );
		$( '#t1Mid' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t1Champs[ 2 ] + '.png ) 0 0/100% 100%' );
		$( '#t1AD' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t1Champs[ 3 ] + '.png ) 0 0/100% 100%' );
		$( '#t1Sup' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t1Champs[ 4 ] + '.png ) 0 0/100% 100%' );
		$( '#t2Top' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t2Champs[ 0 ] + '.png ) 0 0/100% 100% no-repeat' );
		$( '#t2Jung' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t2Champs[ 1 ] + '.png ) 0 0/100% 100%' );
		$( '#t2Mid' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t2Champs[ 2 ] + '.png ) 0 0/100% 100%' );
		$( '#t2AD' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t2Champs[ 3 ] + '.png ) 0 0/100% 100%' );
		$( '#t2Sup' ).css( 'background', 'url(http://ddragon.leagueoflegends.com/cdn/' + version + '/img/champion/' + t2Champs[ 4 ] + '.png ) 0 0/100% 100%' );
	} )
	event.preventDefault();
	$( '.gameDeck' ).on( 'click', function( e ) {
		if ( $( event.target ).hasClass( 'gameNode2' ) || $( event.target ).hasClass( 'gameNode1' ) ) {
			if ( !toolTip ) {
				toolTip = true;
				var newDiv = $( event.target ).clone();
				newDiv.addClass( 'toolTip' );
				newDiv.attr( 'id', 'toolTip' );
				$( '.gameDeck' ).append( newDiv );
				var fillSpace = $( '#t1Top' );
				var champClick = newDiv.css( 'background-image' );
				champClick = champClick.replace( 'url(', '' ).replace( ')', '' ).replace( /\"/gi, "" ).replace( '.png', '' );
				champClick = champClick.split( '/' );
				champClick = champClick[ champClick.length - 1 ];
				console.log( champClick );
				var id = gameChamps[ champClick ];
				$.ajax( {
					url: 'https://global.api.pvp.net/api/lol/static-data/na/v1.2/champion/' + id + '?champData=image,passive,spells&api_key=RGAPI-1f0b8fd1-baaf-4fcf-acf1-0ec64909781a',
				} ).done(function(result){ //For the love of god put this in a helper function
					console.log(result);
					newDiv.text(result.name);
					var row = $('<div></div>')
					var passive = row.clone();
					row.addClass( 'row-centered' );
					passive.addClass( 'col-sm-2' );
					passive.addClass( 'col-centered' );
					var spell0 = passive.clone();
					var spell1 = passive.clone();
					var spell2 = passive.clone();
					var spell3 = passive.clone();
					var spellDiv = [ spell0, spell1, spell2, spell3 ];
					passive.append( $( '<img>', {
						id: 'passive',
						src: 'http://ddragon.leagueoflegends.com/cdn/6.4.1/img/passive/' + result.passive.image.full
					} ).addClass( 'spell' ) );
					for ( var i = 0; i < spellDiv.length; i++ ) {
						spellDiv[ i ].append( $( '<img>', {
							id: 'spell' + i,
							src: 'http://ddragon.leagueoflegends.com/cdn/6.4.1/img/spell/' + result.spells[ i ].image.full
						} ).addClass( 'spell' ) );
					}
					row.addClass( 'row' );
					var spellDescRow = row.clone();
					spellDescRow.addClass( 'spellDesc' );
					spellDescRow.css( 'height', '100px' );
					row.append( passive );
					row.append( spell0 );
					row.append( spell1 );
					row.append( spell2 );
					row.append( spell3 );
					newDiv.append( row );
					newDiv.append( spellDescRow );
					newDiv.css( 'color', 'white' );
					$( '.spell' ).mouseenter( function() {
						if ( $( event.target ).attr( 'id' ) === 'passive' ) {
							spellDescRow.append( $( '<p>' + result.passive.name + '</br>' + result.passive.description + '</p>' ) )
						} else {
							var index = parseInt( $( this ).attr( 'id' ).charAt( 5 ) )
							spellDescRow.append( $( '<p>' + result.spells[ index ].name + '</br>' + result.spells[ index ].description + '</p>' ) )
						}
						console.log( parseInt( $( this ).attr( 'id' ).charAt( 5 ) ) );
					} )
					$( '.spell' ).mouseleave( function() {
						spellDescRow.text( '' );
					} )
				} )
				if ( $( event.target ).hasClass( 'gameNode2' ) ) {
					newDiv.css( 'background', '#A44A3F' );
				}
				if ( $( event.target ).hasClass( 'gameNode1' ) ) {
					newDiv.css( 'background', '#08415C' );
				}
				newDiv.css( 'position', 'absolute' );
				var position = $( event.target ).position();
				//console.log( position );
				newDiv.css( 'left', position.left );
				newDiv.css( 'top', position.top );
				newDiv.css( 'z-index', 1 );
				newDiv.animate( {
					left: fillSpace.position().left + "px",
					top: fillSpace.position().top + "px",
					height: '200px',
					width: $( '.gameDeck' ).width()
				}, 500 );
			}
		}
	} );
	// $('.spell').mouseenter(function(){
	// 	console.log("hiiii");
	// })

	$( '.gameDeck' ).mouseleave( function() {
		$( '#toolTip' ).remove();
		toolTip = false;
	} )
} )
